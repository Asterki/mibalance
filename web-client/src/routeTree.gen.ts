/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProfileImport } from './routes/profile'
import { Route as IndexImport } from './routes/index'
import { Route as HomeIndexImport } from './routes/home/index'
import { Route as HomeWalletsImport } from './routes/home/wallets'
import { Route as HomeTransactionsImport } from './routes/home/transactions'
import { Route as HomeSettingsImport } from './routes/home/settings'
import { Route as HomeProfileImport } from './routes/home/profile'
import { Route as HomeBudgetsImport } from './routes/home/budgets'
import { Route as ErrorsOfflineImport } from './routes/errors/offline'
import { Route as Errors404Import } from './routes/errors/404'
import { Route as Errors403Import } from './routes/errors/403'
import { Route as AuthVerifyEmailImport } from './routes/auth/verify-email'
import { Route as AuthResetPasswordImport } from './routes/auth/reset-password'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLogoutImport } from './routes/auth/logout'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AuthForgotPasswordImport } from './routes/auth/forgot-password'

// Create/Update Routes

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HomeIndexRoute = HomeIndexImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRoute,
} as any)

const HomeWalletsRoute = HomeWalletsImport.update({
  id: '/home/wallets',
  path: '/home/wallets',
  getParentRoute: () => rootRoute,
} as any)

const HomeTransactionsRoute = HomeTransactionsImport.update({
  id: '/home/transactions',
  path: '/home/transactions',
  getParentRoute: () => rootRoute,
} as any)

const HomeSettingsRoute = HomeSettingsImport.update({
  id: '/home/settings',
  path: '/home/settings',
  getParentRoute: () => rootRoute,
} as any)

const HomeProfileRoute = HomeProfileImport.update({
  id: '/home/profile',
  path: '/home/profile',
  getParentRoute: () => rootRoute,
} as any)

const HomeBudgetsRoute = HomeBudgetsImport.update({
  id: '/home/budgets',
  path: '/home/budgets',
  getParentRoute: () => rootRoute,
} as any)

const ErrorsOfflineRoute = ErrorsOfflineImport.update({
  id: '/errors/offline',
  path: '/errors/offline',
  getParentRoute: () => rootRoute,
} as any)

const Errors404Route = Errors404Import.update({
  id: '/errors/404',
  path: '/errors/404',
  getParentRoute: () => rootRoute,
} as any)

const Errors403Route = Errors403Import.update({
  id: '/errors/403',
  path: '/errors/403',
  getParentRoute: () => rootRoute,
} as any)

const AuthVerifyEmailRoute = AuthVerifyEmailImport.update({
  id: '/auth/verify-email',
  path: '/auth/verify-email',
  getParentRoute: () => rootRoute,
} as any)

const AuthResetPasswordRoute = AuthResetPasswordImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLogoutRoute = AuthLogoutImport.update({
  id: '/auth/logout',
  path: '/auth/logout',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/logout': {
      id: '/auth/logout'
      path: '/auth/logout'
      fullPath: '/auth/logout'
      preLoaderRoute: typeof AuthLogoutImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/auth/verify-email': {
      id: '/auth/verify-email'
      path: '/auth/verify-email'
      fullPath: '/auth/verify-email'
      preLoaderRoute: typeof AuthVerifyEmailImport
      parentRoute: typeof rootRoute
    }
    '/errors/403': {
      id: '/errors/403'
      path: '/errors/403'
      fullPath: '/errors/403'
      preLoaderRoute: typeof Errors403Import
      parentRoute: typeof rootRoute
    }
    '/errors/404': {
      id: '/errors/404'
      path: '/errors/404'
      fullPath: '/errors/404'
      preLoaderRoute: typeof Errors404Import
      parentRoute: typeof rootRoute
    }
    '/errors/offline': {
      id: '/errors/offline'
      path: '/errors/offline'
      fullPath: '/errors/offline'
      preLoaderRoute: typeof ErrorsOfflineImport
      parentRoute: typeof rootRoute
    }
    '/home/budgets': {
      id: '/home/budgets'
      path: '/home/budgets'
      fullPath: '/home/budgets'
      preLoaderRoute: typeof HomeBudgetsImport
      parentRoute: typeof rootRoute
    }
    '/home/profile': {
      id: '/home/profile'
      path: '/home/profile'
      fullPath: '/home/profile'
      preLoaderRoute: typeof HomeProfileImport
      parentRoute: typeof rootRoute
    }
    '/home/settings': {
      id: '/home/settings'
      path: '/home/settings'
      fullPath: '/home/settings'
      preLoaderRoute: typeof HomeSettingsImport
      parentRoute: typeof rootRoute
    }
    '/home/transactions': {
      id: '/home/transactions'
      path: '/home/transactions'
      fullPath: '/home/transactions'
      preLoaderRoute: typeof HomeTransactionsImport
      parentRoute: typeof rootRoute
    }
    '/home/wallets': {
      id: '/home/wallets'
      path: '/home/wallets'
      fullPath: '/home/wallets'
      preLoaderRoute: typeof HomeWalletsImport
      parentRoute: typeof rootRoute
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/errors/403': typeof Errors403Route
  '/errors/404': typeof Errors404Route
  '/errors/offline': typeof ErrorsOfflineRoute
  '/home/budgets': typeof HomeBudgetsRoute
  '/home/profile': typeof HomeProfileRoute
  '/home/settings': typeof HomeSettingsRoute
  '/home/transactions': typeof HomeTransactionsRoute
  '/home/wallets': typeof HomeWalletsRoute
  '/home': typeof HomeIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/errors/403': typeof Errors403Route
  '/errors/404': typeof Errors404Route
  '/errors/offline': typeof ErrorsOfflineRoute
  '/home/budgets': typeof HomeBudgetsRoute
  '/home/profile': typeof HomeProfileRoute
  '/home/settings': typeof HomeSettingsRoute
  '/home/transactions': typeof HomeTransactionsRoute
  '/home/wallets': typeof HomeWalletsRoute
  '/home': typeof HomeIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/logout': typeof AuthLogoutRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify-email': typeof AuthVerifyEmailRoute
  '/errors/403': typeof Errors403Route
  '/errors/404': typeof Errors404Route
  '/errors/offline': typeof ErrorsOfflineRoute
  '/home/budgets': typeof HomeBudgetsRoute
  '/home/profile': typeof HomeProfileRoute
  '/home/settings': typeof HomeSettingsRoute
  '/home/transactions': typeof HomeTransactionsRoute
  '/home/wallets': typeof HomeWalletsRoute
  '/home/': typeof HomeIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/verify-email'
    | '/errors/403'
    | '/errors/404'
    | '/errors/offline'
    | '/home/budgets'
    | '/home/profile'
    | '/home/settings'
    | '/home/transactions'
    | '/home/wallets'
    | '/home'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/profile'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/verify-email'
    | '/errors/403'
    | '/errors/404'
    | '/errors/offline'
    | '/home/budgets'
    | '/home/profile'
    | '/home/settings'
    | '/home/transactions'
    | '/home/wallets'
    | '/home'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/logout'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/verify-email'
    | '/errors/403'
    | '/errors/404'
    | '/errors/offline'
    | '/home/budgets'
    | '/home/profile'
    | '/home/settings'
    | '/home/transactions'
    | '/home/wallets'
    | '/home/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRoute: typeof ProfileRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthLogoutRoute: typeof AuthLogoutRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthVerifyEmailRoute: typeof AuthVerifyEmailRoute
  Errors403Route: typeof Errors403Route
  Errors404Route: typeof Errors404Route
  ErrorsOfflineRoute: typeof ErrorsOfflineRoute
  HomeBudgetsRoute: typeof HomeBudgetsRoute
  HomeProfileRoute: typeof HomeProfileRoute
  HomeSettingsRoute: typeof HomeSettingsRoute
  HomeTransactionsRoute: typeof HomeTransactionsRoute
  HomeWalletsRoute: typeof HomeWalletsRoute
  HomeIndexRoute: typeof HomeIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRoute: ProfileRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthLogoutRoute: AuthLogoutRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthVerifyEmailRoute: AuthVerifyEmailRoute,
  Errors403Route: Errors403Route,
  Errors404Route: Errors404Route,
  ErrorsOfflineRoute: ErrorsOfflineRoute,
  HomeBudgetsRoute: HomeBudgetsRoute,
  HomeProfileRoute: HomeProfileRoute,
  HomeSettingsRoute: HomeSettingsRoute,
  HomeTransactionsRoute: HomeTransactionsRoute,
  HomeWalletsRoute: HomeWalletsRoute,
  HomeIndexRoute: HomeIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/profile",
        "/auth/forgot-password",
        "/auth/login",
        "/auth/logout",
        "/auth/register",
        "/auth/reset-password",
        "/auth/verify-email",
        "/errors/403",
        "/errors/404",
        "/errors/offline",
        "/home/budgets",
        "/home/profile",
        "/home/settings",
        "/home/transactions",
        "/home/wallets",
        "/home/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/auth/forgot-password": {
      "filePath": "auth/forgot-password.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/logout": {
      "filePath": "auth/logout.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/auth/reset-password": {
      "filePath": "auth/reset-password.tsx"
    },
    "/auth/verify-email": {
      "filePath": "auth/verify-email.tsx"
    },
    "/errors/403": {
      "filePath": "errors/403.tsx"
    },
    "/errors/404": {
      "filePath": "errors/404.tsx"
    },
    "/errors/offline": {
      "filePath": "errors/offline.tsx"
    },
    "/home/budgets": {
      "filePath": "home/budgets.tsx"
    },
    "/home/profile": {
      "filePath": "home/profile.tsx"
    },
    "/home/settings": {
      "filePath": "home/settings.tsx"
    },
    "/home/transactions": {
      "filePath": "home/transactions.tsx"
    },
    "/home/wallets": {
      "filePath": "home/wallets.tsx"
    },
    "/home/": {
      "filePath": "home/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
